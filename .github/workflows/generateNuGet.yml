name: Generate NuGet Packages

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      runtime:
        description: Check this box to generate runtime packages on NuGet
        type: boolean
        default: true
      apps:
        description: Comma separated list of apps to generate packages for
        required: false
        default: 'https://github.com/BusinessCentralApps/buildorder/releases/download/2.0.200/BO-DK-main-Apps-2.0.200.0.zip'
      dependencies:
        description: Comma separated list of dependencies to publish before generating runtime packages
        required: false
        default: 'https://github.com/BusinessCentralApps/buildorder/releases/download/2.0.200/Common-main-Apps-2.0.200.0.zip,https://github.com/BusinessCentralApps/buildorder/releases/download/2.0.200/Misc-main-Apps-2.0.200.0.zip,https://github.com/BusinessCentralApps/buildorder/releases/download/2.0.200/BO-W1-main-Apps-2.0.200.0.zip'
      country:
        description: Country to generate packages for/with (default is w1)
        required: false
        default: 'dk'
      additionalCountries:
        description: Comma separated list of additional countries to generate packages for/with (leave empty for none)
        required: false
        default: ''
      artifactVersion:
        description: Business Central version to generate packages for/with (leave empty for default)
        required: false
        default: ''
      artifactOnPrem:
        description: Check this box to use on-prem Business Central artifacts
        type: boolean
        default: false

jobs:
  DetermineArtifacts:
    name: Determine Business Central Artifacts
    if: github.event.inputs.runtime == 'true'
    runs-on: [ ubuntu-latest ]
    outputs:
      artifactsNeeded: ${{ steps.determineArtifacts.outputs.artifactsNeeded }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine Artifacts
        id: determineArtifacts
        shell: pwsh
        env:
          nugetToken: ${{ secrets.NUGETTOKEN }}
          nuGetServerUrl: ${{ secrets.NUGETSERVERURL }}
          apps: ${{ github.event.inputs.apps }}
          dependencies: ${{ github.event.inputs.dependencies }}
          country: ${{ github.event.inputs.country }}
          additionalCountries: ${{ github.event.inputs.additionalCountries }}
          artifactVersion: ${{ github.event.inputs.artifactVersion }}
          artifactOnPrem: ${{ github.event.inputs.artifactOnPrem }}
        run: |
          Write-Host "apps: $env:apps"
          . (Join-Path $env:GITHUB_WORKSPACE "DetermineArtifacts.ps1")

  GenerateRuntimeNuGetPackages:
    name: Generate Runtime NuGet Packages
    if: github.event.inputs.runtime == 'true'
    needs: [ DetermineArtifacts ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate Runtime NuGet Packages
        shell: pwsh
        env:
          nugetToken: ${{ secrets.NUGETTOKEN }}
          nuGetServerUrl: ${{ secrets.NUGETSERVERURL }}
          apps: ${{ github.event.inputs.apps }}
          dependencies: ${{ github.event.inputs.dependencies }}
          country: ${{ github.event.inputs.country }}
          additionalCountries: ${{ github.event.inputs.additionalCountries }}
          artifactVersion: ${{ github.event.inputs.artifactVersion }}
          artifactOnPrem: ${{ github.event.inputs.artifactOnPrem }}
          artifactsNeeded: ${{ needs.DetermineArtifacts.outputs.artifactsNeeded }}
        run: |
          . (Join-Path $env:GITHUB_WORKSPACE "GenerateRuntimeNuGetPackages.ps1")

  GenerateNuGetPackages:
    name: Generate NuGet Packages
    if: github.event.inputs.runtime == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate NuGet Packages
        shell: pwsh
        env:
          nugetToken: ${{ secrets.NUGETTOKEN }}
          nuGetServerUrl: ${{ secrets.NUGETSERVERURL }}
          apps: ${{ github.event.inputs.apps }}
          dependencies: ${{ github.event.inputs.dependencies }}
          country: ${{ github.event.inputs.country }}
          additionalCountries: ${{ github.event.inputs.additionalCountries }}
          artifactVersion: ${{ github.event.inputs.artifactVersion }}
          artifactOnPrem: ${{ github.event.inputs.artifactOnPrem }}
        run: |
          . (Join-Path $env:GITHUB_WORKSPACE "GenerateNuGetPackages.ps1")
